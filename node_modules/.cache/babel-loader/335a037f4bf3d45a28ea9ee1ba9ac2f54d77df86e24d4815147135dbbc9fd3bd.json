{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\project-calc-resource\\\\src\\\\components\\\\calculators\\\\SPECjbbCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Grid, TextField, Typography, Paper, Box, Alert } from '@mui/material';\nimport { calculateSPECjbb2005, calculateTransactionsPerSecond, calculateServerResources, BASELINE_SINGLE_CORE } from '../../services/performanceCalculator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STORAGE_KEY = 'specjbbCalculatorData';\nexport default function SPECjbbCalculator({\n  onResultChange\n}) {\n  _s();\n  const [inputs, setInputs] = useState(() => {\n    // 从localStorage读取初始数据\n    const savedData = localStorage.getItem(STORAGE_KEY);\n    return savedData ? JSON.parse(savedData) : {\n      totalUsers: 158200,\n      // 系统用户数\n      peakConcurrencyRate: 0.001,\n      // 峰值系统并发率（0.1%）\n      tasksPerConcurrentUser: 2,\n      // 每个并发产生的任务数\n\n      // 业务交易量计算参数\n      requestsPerTransaction: 4,\n      // 每笔业务发出应用请求数\n      transactionsPerRequest: 5,\n      // 平均每个请求处理的应用类事务数\n\n      // SPECjbb2005计算参数\n      peakValuePerTransaction: 1500,\n      // 每笔业务交易需消耗的SPECjbb2005峰值\n      redundancyCapacity: 0.3,\n      // 系统的冗余处理能力 (30%)\n      nonJavaResourcePercentage: 0 // 非Java应用所占用的系统资源百分比\n    };\n  });\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setInputs(prev => ({\n      ...prev,\n      [name]: parseFloat(value) || 0\n    }));\n  };\n\n  // 计算峰值并发用户数\n  const calculatePeakConcurrentUsers = () => {\n    return inputs.totalUsers * inputs.peakConcurrencyRate;\n  };\n\n  // 计算每秒并发要处理的业务量\n  const calculatePeakConcurrentTransactions = () => {\n    const peakConcurrentUsers = calculatePeakConcurrentUsers();\n    return peakConcurrentUsers * inputs.tasksPerConcurrentUser;\n  };\n  useEffect(() => {\n    // 保存到localStorage\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(inputs));\n    const peakConcurrentTransactions = calculatePeakConcurrentTransactions();\n\n    // 计算每秒业务交易量\n    const transactionsPerSecond = calculateTransactionsPerSecond({\n      peakConcurrentTransactions,\n      requestsPerTransaction: inputs.requestsPerTransaction,\n      transactionsPerRequest: inputs.transactionsPerRequest\n    });\n\n    // 计算SPECjbb2005值\n    const specjbbResult = calculateSPECjbb2005({\n      transactionsPerSecond,\n      peakValuePerTransaction: inputs.peakValuePerTransaction,\n      redundancyCapacity: inputs.redundancyCapacity,\n      nonJavaResourcePercentage: inputs.nonJavaResourcePercentage\n    });\n\n    // 计算所需核数\n    const {\n      appServerCores\n    } = calculateServerResources({\n      specjbbValue: specjbbResult,\n      tpccValue: 0,\n      // 这里我们只关心SPECjbb的结果\n      baselineSingleCore: BASELINE_SINGLE_CORE\n    });\n    const finalResult = {\n      peakConcurrentUsers: calculatePeakConcurrentUsers(),\n      peakConcurrentTransactions,\n      transactionsPerSecond,\n      specjbbValue: specjbbResult,\n      appServerCores,\n      explanation: generateExplanation(transactionsPerSecond, specjbbResult, appServerCores, inputs)\n    };\n    onResultChange(finalResult);\n  }, [inputs, onResultChange]);\n  const generateExplanation = (transactionsPerSecond, specjbbResult, appServerCores, params) => {\n    const peakConcurrentUsers = calculatePeakConcurrentUsers();\n    const peakConcurrentTransactions = calculatePeakConcurrentTransactions();\n    return `应用服务器主要处理WEB服务器发送的业务请求处理、业务处理，主要工具箱使用，实现报表类、通用类等工具服务，每个微服务组件支持独立部署，为WEB应用提供共性服务支撑和基础信息配置。\n\n应用服务器采用SPECjbb2005标准对其性能指标进行测算，其计算公式为：SPECjbb2005 = A × B /（1 - C - D）\n其中：\nA：每秒最多需要同时处理的业务交易量。\nB：每笔业务交易需消耗的SPECjbb2005峰值。\nC：系统的冗余处理能力。\nD：非Java应用所占用的系统资源百分比。\n\n计算过程：\n1. 并发用户计算：\n   - 系统用户数：${params.totalUsers}人\n   - 峰值系统并发率：${(params.peakConcurrencyRate * 100).toFixed(3)}%\n   - 峰值并发用户数 = ${params.totalUsers} × ${(params.peakConcurrencyRate * 100).toFixed(3)}% = ${peakConcurrentUsers.toFixed(1)}人\n   - 每个并发产生的任务数：${params.tasksPerConcurrentUser}个\n   - 每秒并发要处理的业务量 = ${peakConcurrentUsers.toFixed(1)} × ${params.tasksPerConcurrentUser} = ${peakConcurrentTransactions.toFixed(1)}\n\n2. 业务交易量计算：\n   - 每笔业务发出应用请求数为${params.requestsPerTransaction}\n   - 平均每个请求处理的应用类事务数为${params.transactionsPerRequest}\n   - 每秒钟最多需要同时处理的业务交易量 = ${peakConcurrentTransactions.toFixed(1)} × ${params.requestsPerTransaction} × ${params.transactionsPerRequest} = ${transactionsPerSecond}\n\n3. SPECjbb2005值计算：\n   - 每笔业务交易需消耗的SPECjbb2005峰值为${params.peakValuePerTransaction}\n   - 系统预留${params.redundancyCapacity * 100}%冗余\n   - 非Java应用所占系统资源的百分比为${params.nonJavaResourcePercentage * 100}%\n   \n最终SPECjbb2005值 = ${transactionsPerSecond} × ${params.peakValuePerTransaction} / (1 - ${params.redundancyCapacity} - ${params.nonJavaResourcePercentage}) = ${specjbbResult.toLocaleString()}\n\n4. 所需核数计算：\n   - 单核SPECjbb2005基准值：${BASELINE_SINGLE_CORE.specjbb}\n   - 虚拟化开销：10%\n   - 所需核数 = ⌈${specjbbResult.toLocaleString()} ÷ ${BASELINE_SINGLE_CORE.specjbb} ÷ (1 - 0.1)⌉ = ${appServerCores}核`;\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"SPECjbb2005\\u6027\\u80FD\\u6D4B\\u7B97\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 2,\n          sx: {\n            p: 2,\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"\\u7528\\u6237\\u548C\\u5E76\\u53D1\\u53C2\\u6570\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'absolute',\n              top: 16,\n              right: 16,\n              bgcolor: 'primary.main',\n              color: 'white',\n              px: 2,\n              py: 1,\n              borderRadius: 1,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              sx: {\n                mb: 0.5\n              },\n              children: \"\\u6240\\u9700\\u6838\\u6570\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"div\",\n              children: (() => {\n                const peakConcurrentTransactions = calculatePeakConcurrentTransactions();\n                const transactionsPerSecond = calculateTransactionsPerSecond({\n                  peakConcurrentTransactions,\n                  requestsPerTransaction: inputs.requestsPerTransaction,\n                  transactionsPerRequest: inputs.transactionsPerRequest\n                });\n                const specjbbResult = calculateSPECjbb2005({\n                  transactionsPerSecond,\n                  peakValuePerTransaction: inputs.peakValuePerTransaction,\n                  redundancyCapacity: inputs.redundancyCapacity,\n                  nonJavaResourcePercentage: inputs.nonJavaResourcePercentage\n                });\n                const {\n                  appServerCores\n                } = calculateServerResources({\n                  specjbbValue: specjbbResult,\n                  tpccValue: 0,\n                  baselineSingleCore: BASELINE_SINGLE_CORE\n                });\n                return `${appServerCores}核`;\n              })()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"\\u7CFB\\u7EDF\\u7528\\u6237\\u6570\",\n                name: \"totalUsers\",\n                type: \"number\",\n                value: inputs.totalUsers,\n                onChange: handleInputChange,\n                helperText: \"\\u7CFB\\u7EDF\\u603B\\u7528\\u6237\\u6570\\uFF08\\u4EBA\\uFF09\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"\\u5CF0\\u503C\\u7CFB\\u7EDF\\u5E76\\u53D1\\u7387\",\n                name: \"peakConcurrencyRate\",\n                type: \"number\",\n                value: inputs.peakConcurrencyRate,\n                onChange: handleInputChange,\n                helperText: \"0-1\\u4E4B\\u95F4\\u7684\\u5C0F\\u6570\\uFF0C\\u4F8B\\u59820.001\\u8868\\u793A0.1%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"\\u6BCF\\u4E2A\\u5E76\\u53D1\\u4EA7\\u751F\\u7684\\u4EFB\\u52A1\\u6570\",\n                name: \"tasksPerConcurrentUser\",\n                type: \"number\",\n                value: inputs.tasksPerConcurrentUser,\n                onChange: handleInputChange,\n                helperText: \"\\u6BCF\\u4E2A\\u5E76\\u53D1\\u7528\\u6237\\u4EA7\\u751F\\u7684\\u4EFB\\u52A1\\u6570\\uFF08\\u4E2A\\uFF09\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                disabled: true,\n                label: \"\\u5CF0\\u503C\\u5E76\\u53D1\\u7528\\u6237\\u6570\",\n                value: calculatePeakConcurrentUsers().toFixed(1),\n                helperText: \"\\u81EA\\u52A8\\u8BA1\\u7B97\\uFF1A\\u7CFB\\u7EDF\\u7528\\u6237\\u6570 \\xD7 \\u5CF0\\u503C\\u7CFB\\u7EDF\\u5E76\\u53D1\\u7387\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 2,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"\\u4E1A\\u52A1\\u4EA4\\u6613\\u91CF\\u53C2\\u6570\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"\\u6BCF\\u7B14\\u4E1A\\u52A1\\u53D1\\u51FA\\u5E94\\u7528\\u8BF7\\u6C42\\u6570\",\n                name: \"requestsPerTransaction\",\n                type: \"number\",\n                value: inputs.requestsPerTransaction,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"\\u5E73\\u5747\\u6BCF\\u4E2A\\u8BF7\\u6C42\\u5904\\u7406\\u7684\\u5E94\\u7528\\u7C7B\\u4E8B\\u52A1\\u6570\",\n                name: \"transactionsPerRequest\",\n                type: \"number\",\n                value: inputs.transactionsPerRequest,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 2,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"SPECjbb2005\\u53C2\\u6570\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"\\u6BCF\\u7B14\\u4E1A\\u52A1\\u4EA4\\u6613SPECjbb2005\\u5CF0\\u503C\",\n                name: \"peakValuePerTransaction\",\n                type: \"number\",\n                value: inputs.peakValuePerTransaction,\n                onChange: handleInputChange,\n                helperText: \"bops\\u503C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"\\u7CFB\\u7EDF\\u5197\\u4F59\\u5904\\u7406\\u80FD\\u529B\",\n                name: \"redundancyCapacity\",\n                type: \"number\",\n                value: inputs.redundancyCapacity,\n                onChange: handleInputChange,\n                helperText: \"0-1\\u4E4B\\u95F4\\u7684\\u5C0F\\u6570\\uFF0C\\u4F8B\\u59820.3\\u8868\\u793A30%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"\\u975EJava\\u5E94\\u7528\\u5360\\u7528\\u7CFB\\u7EDF\\u8D44\\u6E90\\u767E\\u5206\\u6BD4\",\n                name: \"nonJavaResourcePercentage\",\n                type: \"number\",\n                value: inputs.nonJavaResourcePercentage,\n                onChange: handleInputChange,\n                helperText: \"0-1\\u4E4B\\u95F4\\u7684\\u5C0F\\u6570\\uFF0C\\u4F8B\\u59820.2\\u8868\\u793A20%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), parseFloat(inputs.redundancyCapacity) + parseFloat(inputs.nonJavaResourcePercentage) >= 100 && /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: \"\\u7CFB\\u7EDF\\u5197\\u4F59\\u7387\\u4E0E\\u975EJava\\u8D44\\u6E90\\u5360\\u6BD4\\u4E4B\\u548C\\u4E0D\\u80FD\\u5927\\u4E8E\\u6216\\u7B49\\u4E8E100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(SPECjbbCalculator, \"GEccR/wRSYJk44vOqsHpUrj83E0=\");\n_c = SPECjbbCalculator;\nvar _c;\n$RefreshReg$(_c, \"SPECjbbCalculator\");","map":{"version":3,"names":["React","useState","useEffect","Grid","TextField","Typography","Paper","Box","Alert","calculateSPECjbb2005","calculateTransactionsPerSecond","calculateServerResources","BASELINE_SINGLE_CORE","jsxDEV","_jsxDEV","STORAGE_KEY","SPECjbbCalculator","onResultChange","_s","inputs","setInputs","savedData","localStorage","getItem","JSON","parse","totalUsers","peakConcurrencyRate","tasksPerConcurrentUser","requestsPerTransaction","transactionsPerRequest","peakValuePerTransaction","redundancyCapacity","nonJavaResourcePercentage","handleInputChange","event","name","value","target","prev","parseFloat","calculatePeakConcurrentUsers","calculatePeakConcurrentTransactions","peakConcurrentUsers","setItem","stringify","peakConcurrentTransactions","transactionsPerSecond","specjbbResult","appServerCores","specjbbValue","tpccValue","baselineSingleCore","finalResult","explanation","generateExplanation","params","toFixed","toLocaleString","specjbb","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","elevation","sx","p","position","top","right","bgcolor","color","px","py","borderRadius","display","flexDirection","alignItems","mb","component","fullWidth","label","type","onChange","helperText","disabled","mt","severity","_c","$RefreshReg$"],"sources":["D:/Workspace/project-calc-resource/src/components/calculators/SPECjbbCalculator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Paper,\r\n  Box,\r\n  Alert\r\n} from '@mui/material';\r\nimport {\r\n  calculateSPECjbb2005,\r\n  calculateTransactionsPerSecond,\r\n  calculateServerResources,\r\n  BASELINE_SINGLE_CORE\r\n} from '../../services/performanceCalculator';\r\n\r\nconst STORAGE_KEY = 'specjbbCalculatorData';\r\n\r\nexport default function SPECjbbCalculator({ onResultChange }) {\r\n  const [inputs, setInputs] = useState(() => {\r\n    // 从localStorage读取初始数据\r\n    const savedData = localStorage.getItem(STORAGE_KEY);\r\n    return savedData ? JSON.parse(savedData) : {\r\n      totalUsers: 158200, // 系统用户数\r\n      peakConcurrencyRate: 0.001, // 峰值系统并发率（0.1%）\r\n      tasksPerConcurrentUser: 2, // 每个并发产生的任务数\r\n      \r\n      // 业务交易量计算参数\r\n      requestsPerTransaction: 4, // 每笔业务发出应用请求数\r\n      transactionsPerRequest: 5, // 平均每个请求处理的应用类事务数\r\n      \r\n      // SPECjbb2005计算参数\r\n      peakValuePerTransaction: 1500, // 每笔业务交易需消耗的SPECjbb2005峰值\r\n      redundancyCapacity: 0.3, // 系统的冗余处理能力 (30%)\r\n      nonJavaResourcePercentage: 0 // 非Java应用所占用的系统资源百分比\r\n    };\r\n  });\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setInputs(prev => ({\r\n      ...prev,\r\n      [name]: parseFloat(value) || 0\r\n    }));\r\n  };\r\n\r\n  // 计算峰值并发用户数\r\n  const calculatePeakConcurrentUsers = () => {\r\n    return inputs.totalUsers * inputs.peakConcurrencyRate;\r\n  };\r\n\r\n  // 计算每秒并发要处理的业务量\r\n  const calculatePeakConcurrentTransactions = () => {\r\n    const peakConcurrentUsers = calculatePeakConcurrentUsers();\r\n    return peakConcurrentUsers * inputs.tasksPerConcurrentUser;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 保存到localStorage\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(inputs));\r\n\r\n    const peakConcurrentTransactions = calculatePeakConcurrentTransactions();\r\n    \r\n    // 计算每秒业务交易量\r\n    const transactionsPerSecond = calculateTransactionsPerSecond({\r\n      peakConcurrentTransactions,\r\n      requestsPerTransaction: inputs.requestsPerTransaction,\r\n      transactionsPerRequest: inputs.transactionsPerRequest\r\n    });\r\n\r\n    // 计算SPECjbb2005值\r\n    const specjbbResult = calculateSPECjbb2005({\r\n      transactionsPerSecond,\r\n      peakValuePerTransaction: inputs.peakValuePerTransaction,\r\n      redundancyCapacity: inputs.redundancyCapacity,\r\n      nonJavaResourcePercentage: inputs.nonJavaResourcePercentage\r\n    });\r\n\r\n    // 计算所需核数\r\n    const { appServerCores } = calculateServerResources({\r\n      specjbbValue: specjbbResult,\r\n      tpccValue: 0, // 这里我们只关心SPECjbb的结果\r\n      baselineSingleCore: BASELINE_SINGLE_CORE\r\n    });\r\n\r\n    const finalResult = {\r\n      peakConcurrentUsers: calculatePeakConcurrentUsers(),\r\n      peakConcurrentTransactions,\r\n      transactionsPerSecond,\r\n      specjbbValue: specjbbResult,\r\n      appServerCores,\r\n      explanation: generateExplanation(transactionsPerSecond, specjbbResult, appServerCores, inputs)\r\n    };\r\n\r\n    onResultChange(finalResult);\r\n  }, [inputs, onResultChange]);\r\n\r\n  const generateExplanation = (transactionsPerSecond, specjbbResult, appServerCores, params) => {\r\n    const peakConcurrentUsers = calculatePeakConcurrentUsers();\r\n    const peakConcurrentTransactions = calculatePeakConcurrentTransactions();\r\n    \r\n    return `应用服务器主要处理WEB服务器发送的业务请求处理、业务处理，主要工具箱使用，实现报表类、通用类等工具服务，每个微服务组件支持独立部署，为WEB应用提供共性服务支撑和基础信息配置。\r\n\r\n应用服务器采用SPECjbb2005标准对其性能指标进行测算，其计算公式为：SPECjbb2005 = A × B /（1 - C - D）\r\n其中：\r\nA：每秒最多需要同时处理的业务交易量。\r\nB：每笔业务交易需消耗的SPECjbb2005峰值。\r\nC：系统的冗余处理能力。\r\nD：非Java应用所占用的系统资源百分比。\r\n\r\n计算过程：\r\n1. 并发用户计算：\r\n   - 系统用户数：${params.totalUsers}人\r\n   - 峰值系统并发率：${(params.peakConcurrencyRate * 100).toFixed(3)}%\r\n   - 峰值并发用户数 = ${params.totalUsers} × ${(params.peakConcurrencyRate * 100).toFixed(3)}% = ${peakConcurrentUsers.toFixed(1)}人\r\n   - 每个并发产生的任务数：${params.tasksPerConcurrentUser}个\r\n   - 每秒并发要处理的业务量 = ${peakConcurrentUsers.toFixed(1)} × ${params.tasksPerConcurrentUser} = ${peakConcurrentTransactions.toFixed(1)}\r\n\r\n2. 业务交易量计算：\r\n   - 每笔业务发出应用请求数为${params.requestsPerTransaction}\r\n   - 平均每个请求处理的应用类事务数为${params.transactionsPerRequest}\r\n   - 每秒钟最多需要同时处理的业务交易量 = ${peakConcurrentTransactions.toFixed(1)} × ${params.requestsPerTransaction} × ${params.transactionsPerRequest} = ${transactionsPerSecond}\r\n\r\n3. SPECjbb2005值计算：\r\n   - 每笔业务交易需消耗的SPECjbb2005峰值为${params.peakValuePerTransaction}\r\n   - 系统预留${params.redundancyCapacity * 100}%冗余\r\n   - 非Java应用所占系统资源的百分比为${params.nonJavaResourcePercentage * 100}%\r\n   \r\n最终SPECjbb2005值 = ${transactionsPerSecond} × ${params.peakValuePerTransaction} / (1 - ${params.redundancyCapacity} - ${params.nonJavaResourcePercentage}) = ${specjbbResult.toLocaleString()}\r\n\r\n4. 所需核数计算：\r\n   - 单核SPECjbb2005基准值：${BASELINE_SINGLE_CORE.specjbb}\r\n   - 虚拟化开销：10%\r\n   - 所需核数 = ⌈${specjbbResult.toLocaleString()} ÷ ${BASELINE_SINGLE_CORE.specjbb} ÷ (1 - 0.1)⌉ = ${appServerCores}核`;\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        SPECjbb2005性能测算\r\n      </Typography>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper elevation={2} sx={{ p: 2, position: 'relative' }}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              用户和并发参数\r\n            </Typography>\r\n            <Box \r\n              sx={{ \r\n                position: 'absolute', \r\n                top: 16, \r\n                right: 16, \r\n                bgcolor: 'primary.main',\r\n                color: 'white',\r\n                px: 2,\r\n                py: 1,\r\n                borderRadius: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center'\r\n              }}\r\n            >\r\n              <Typography variant=\"caption\" sx={{ mb: 0.5 }}>\r\n                所需核数\r\n              </Typography>\r\n              <Typography variant=\"h6\" component=\"div\">\r\n                {(() => {\r\n                  const peakConcurrentTransactions = calculatePeakConcurrentTransactions();\r\n                  const transactionsPerSecond = calculateTransactionsPerSecond({\r\n                    peakConcurrentTransactions,\r\n                    requestsPerTransaction: inputs.requestsPerTransaction,\r\n                    transactionsPerRequest: inputs.transactionsPerRequest\r\n                  });\r\n                  const specjbbResult = calculateSPECjbb2005({\r\n                    transactionsPerSecond,\r\n                    peakValuePerTransaction: inputs.peakValuePerTransaction,\r\n                    redundancyCapacity: inputs.redundancyCapacity,\r\n                    nonJavaResourcePercentage: inputs.nonJavaResourcePercentage\r\n                  });\r\n                  const { appServerCores } = calculateServerResources({\r\n                    specjbbValue: specjbbResult,\r\n                    tpccValue: 0,\r\n                    baselineSingleCore: BASELINE_SINGLE_CORE\r\n                  });\r\n                  return `${appServerCores}核`;\r\n                })()}\r\n              </Typography>\r\n            </Box>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"系统用户数\"\r\n                  name=\"totalUsers\"\r\n                  type=\"number\"\r\n                  value={inputs.totalUsers}\r\n                  onChange={handleInputChange}\r\n                  helperText=\"系统总用户数（人）\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"峰值系统并发率\"\r\n                  name=\"peakConcurrencyRate\"\r\n                  type=\"number\"\r\n                  value={inputs.peakConcurrencyRate}\r\n                  onChange={handleInputChange}\r\n                  helperText=\"0-1之间的小数，例如0.001表示0.1%\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"每个并发产生的任务数\"\r\n                  name=\"tasksPerConcurrentUser\"\r\n                  type=\"number\"\r\n                  value={inputs.tasksPerConcurrentUser}\r\n                  onChange={handleInputChange}\r\n                  helperText=\"每个并发用户产生的任务数（个）\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  disabled\r\n                  label=\"峰值并发用户数\"\r\n                  value={calculatePeakConcurrentUsers().toFixed(1)}\r\n                  helperText=\"自动计算：系统用户数 × 峰值系统并发率\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <Paper elevation={2} sx={{ p: 2 }}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              业务交易量参数\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"每笔业务发出应用请求数\"\r\n                  name=\"requestsPerTransaction\"\r\n                  type=\"number\"\r\n                  value={inputs.requestsPerTransaction}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"平均每个请求处理的应用类事务数\"\r\n                  name=\"transactionsPerRequest\"\r\n                  type=\"number\"\r\n                  value={inputs.transactionsPerRequest}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper elevation={2} sx={{ p: 2 }}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              SPECjbb2005参数\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"每笔业务交易SPECjbb2005峰值\"\r\n                  name=\"peakValuePerTransaction\"\r\n                  type=\"number\"\r\n                  value={inputs.peakValuePerTransaction}\r\n                  onChange={handleInputChange}\r\n                  helperText=\"bops值\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"系统冗余处理能力\"\r\n                  name=\"redundancyCapacity\"\r\n                  type=\"number\"\r\n                  value={inputs.redundancyCapacity}\r\n                  onChange={handleInputChange}\r\n                  helperText=\"0-1之间的小数，例如0.3表示30%\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"非Java应用占用系统资源百分比\"\r\n                  name=\"nonJavaResourcePercentage\"\r\n                  type=\"number\"\r\n                  value={inputs.nonJavaResourcePercentage}\r\n                  onChange={handleInputChange}\r\n                  helperText=\"0-1之间的小数，例如0.2表示20%\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {parseFloat(inputs.redundancyCapacity) + parseFloat(inputs.nonJavaResourcePercentage) >= 100 && (\r\n        <Box mt={2}>\r\n          <Alert severity=\"error\">\r\n            系统冗余率与非Java资源占比之和不能大于或等于100%\r\n          </Alert>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}