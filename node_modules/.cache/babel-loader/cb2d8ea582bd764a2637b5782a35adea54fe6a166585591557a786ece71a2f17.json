{"ast":null,"code":"import _objectSpread from\"D:/Workspace/project-calc-resource/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Grid,TextField,Typography,Paper,Box,Alert}from'@mui/material';import{calculateSPECjbb2005,calculateTransactionsPerSecond,calculateServerResources,BASELINE_SINGLE_CORE}from'../../services/performanceCalculator';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const STORAGE_KEY='specjbbCalculatorData';export default function SPECjbbCalculator(_ref){let{onResultChange}=_ref;const[inputs,setInputs]=useState(()=>{// 从localStorage读取初始数据\nconst savedData=localStorage.getItem(STORAGE_KEY);return savedData?JSON.parse(savedData):{totalUsers:158200,// 系统用户数\npeakConcurrencyRate:0.001,// 峰值系统并发率（0.1%）\ntasksPerConcurrentUser:2,// 每个并发产生的任务数\n// 业务交易量计算参数\nrequestsPerTransaction:4,// 每笔业务发出应用请求数\ntransactionsPerRequest:5,// 平均每个请求处理的应用类事务数\n// SPECjbb2005计算参数\npeakValuePerTransaction:1500,// 每笔业务交易需消耗的SPECjbb2005峰值\nredundancyCapacity:0.3,// 系统的冗余处理能力 (30%)\nnonJavaResourcePercentage:0// 非Java应用所占用的系统资源百分比\n};});const handleInputChange=event=>{const{name,value}=event.target;setInputs(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:parseFloat(value)||0}));};// 计算峰值并发用户数\nconst calculatePeakConcurrentUsers=()=>{return inputs.totalUsers*inputs.peakConcurrencyRate;};// 计算每秒并发要处理的业务量\nconst calculatePeakConcurrentTransactions=()=>{const peakConcurrentUsers=calculatePeakConcurrentUsers();return peakConcurrentUsers*inputs.tasksPerConcurrentUser;};useEffect(()=>{// 保存到localStorage\nlocalStorage.setItem(STORAGE_KEY,JSON.stringify(inputs));const peakConcurrentTransactions=calculatePeakConcurrentTransactions();// 计算每秒业务交易量\nconst transactionsPerSecond=calculateTransactionsPerSecond({peakConcurrentTransactions,requestsPerTransaction:inputs.requestsPerTransaction,transactionsPerRequest:inputs.transactionsPerRequest});// 计算SPECjbb2005值\nconst specjbbResult=calculateSPECjbb2005({transactionsPerSecond,peakValuePerTransaction:inputs.peakValuePerTransaction,redundancyCapacity:inputs.redundancyCapacity,nonJavaResourcePercentage:inputs.nonJavaResourcePercentage});// 计算所需核数\nconst{appServerCores}=calculateServerResources({specjbbValue:specjbbResult,tpccValue:0,// 这里我们只关心SPECjbb的结果\nbaselineSingleCore:BASELINE_SINGLE_CORE});const finalResult={peakConcurrentUsers:calculatePeakConcurrentUsers(),peakConcurrentTransactions,transactionsPerSecond,specjbbValue:specjbbResult,appServerCores,explanation:generateExplanation(transactionsPerSecond,specjbbResult,appServerCores,inputs)};onResultChange(finalResult);},[inputs,onResultChange]);const generateExplanation=(transactionsPerSecond,specjbbResult,appServerCores,params)=>{const peakConcurrentUsers=calculatePeakConcurrentUsers();const peakConcurrentTransactions=calculatePeakConcurrentTransactions();return\"\\u5E94\\u7528\\u670D\\u52A1\\u5668\\u4E3B\\u8981\\u5904\\u7406WEB\\u670D\\u52A1\\u5668\\u53D1\\u9001\\u7684\\u4E1A\\u52A1\\u8BF7\\u6C42\\u5904\\u7406\\u3001\\u4E1A\\u52A1\\u5904\\u7406\\uFF0C\\u4E3B\\u8981\\u5DE5\\u5177\\u7BB1\\u4F7F\\u7528\\uFF0C\\u5B9E\\u73B0\\u62A5\\u8868\\u7C7B\\u3001\\u901A\\u7528\\u7C7B\\u7B49\\u5DE5\\u5177\\u670D\\u52A1\\uFF0C\\u6BCF\\u4E2A\\u5FAE\\u670D\\u52A1\\u7EC4\\u4EF6\\u652F\\u6301\\u72EC\\u7ACB\\u90E8\\u7F72\\uFF0C\\u4E3AWEB\\u5E94\\u7528\\u63D0\\u4F9B\\u5171\\u6027\\u670D\\u52A1\\u652F\\u6491\\u548C\\u57FA\\u7840\\u4FE1\\u606F\\u914D\\u7F6E\\u3002\\n\\n\\u5E94\\u7528\\u670D\\u52A1\\u5668\\u91C7\\u7528SPECjbb2005\\u6807\\u51C6\\u5BF9\\u5176\\u6027\\u80FD\\u6307\\u6807\\u8FDB\\u884C\\u6D4B\\u7B97\\uFF0C\\u5176\\u8BA1\\u7B97\\u516C\\u5F0F\\u4E3A\\uFF1ASPECjbb2005 = A \\xD7 B /\\uFF081 - C - D\\uFF09\\n\\u5176\\u4E2D\\uFF1A\\nA\\uFF1A\\u6BCF\\u79D2\\u6700\\u591A\\u9700\\u8981\\u540C\\u65F6\\u5904\\u7406\\u7684\\u4E1A\\u52A1\\u4EA4\\u6613\\u91CF\\u3002\\nB\\uFF1A\\u6BCF\\u7B14\\u4E1A\\u52A1\\u4EA4\\u6613\\u9700\\u6D88\\u8017\\u7684SPECjbb2005\\u5CF0\\u503C\\u3002\\nC\\uFF1A\\u7CFB\\u7EDF\\u7684\\u5197\\u4F59\\u5904\\u7406\\u80FD\\u529B\\u3002\\nD\\uFF1A\\u975EJava\\u5E94\\u7528\\u6240\\u5360\\u7528\\u7684\\u7CFB\\u7EDF\\u8D44\\u6E90\\u767E\\u5206\\u6BD4\\u3002\\n\\n\\u8BA1\\u7B97\\u8FC7\\u7A0B\\uFF1A\\n1. \\u5E76\\u53D1\\u7528\\u6237\\u8BA1\\u7B97\\uFF1A\\n   - \\u7CFB\\u7EDF\\u7528\\u6237\\u6570\\uFF1A\".concat(params.totalUsers,\"\\u4EBA\\n   - \\u5CF0\\u503C\\u7CFB\\u7EDF\\u5E76\\u53D1\\u7387\\uFF1A\").concat((params.peakConcurrencyRate*100).toFixed(3),\"%\\n   - \\u5CF0\\u503C\\u5E76\\u53D1\\u7528\\u6237\\u6570 = \").concat(params.totalUsers,\" \\xD7 \").concat((params.peakConcurrencyRate*100).toFixed(3),\"% = \").concat(peakConcurrentUsers.toFixed(1),\"\\u4EBA\\n   - \\u6BCF\\u4E2A\\u5E76\\u53D1\\u4EA7\\u751F\\u7684\\u4EFB\\u52A1\\u6570\\uFF1A\").concat(params.tasksPerConcurrentUser,\"\\u4E2A\\n   - \\u6BCF\\u79D2\\u5E76\\u53D1\\u8981\\u5904\\u7406\\u7684\\u4E1A\\u52A1\\u91CF = \").concat(peakConcurrentUsers.toFixed(1),\" \\xD7 \").concat(params.tasksPerConcurrentUser,\" = \").concat(peakConcurrentTransactions.toFixed(1),\"\\n\\n2. \\u4E1A\\u52A1\\u4EA4\\u6613\\u91CF\\u8BA1\\u7B97\\uFF1A\\n   - \\u6BCF\\u7B14\\u4E1A\\u52A1\\u53D1\\u51FA\\u5E94\\u7528\\u8BF7\\u6C42\\u6570\\u4E3A\").concat(params.requestsPerTransaction,\"\\n   - \\u5E73\\u5747\\u6BCF\\u4E2A\\u8BF7\\u6C42\\u5904\\u7406\\u7684\\u5E94\\u7528\\u7C7B\\u4E8B\\u52A1\\u6570\\u4E3A\").concat(params.transactionsPerRequest,\"\\n   - \\u6BCF\\u79D2\\u949F\\u6700\\u591A\\u9700\\u8981\\u540C\\u65F6\\u5904\\u7406\\u7684\\u4E1A\\u52A1\\u4EA4\\u6613\\u91CF = \").concat(peakConcurrentTransactions.toFixed(1),\" \\xD7 \").concat(params.requestsPerTransaction,\" \\xD7 \").concat(params.transactionsPerRequest,\" = \").concat(transactionsPerSecond,\"\\n\\n3. SPECjbb2005\\u503C\\u8BA1\\u7B97\\uFF1A\\n   - \\u6BCF\\u7B14\\u4E1A\\u52A1\\u4EA4\\u6613\\u9700\\u6D88\\u8017\\u7684SPECjbb2005\\u5CF0\\u503C\\u4E3A\").concat(params.peakValuePerTransaction,\"\\n   - \\u7CFB\\u7EDF\\u9884\\u7559\").concat(params.redundancyCapacity*100,\"%\\u5197\\u4F59\\n   - \\u975EJava\\u5E94\\u7528\\u6240\\u5360\\u7CFB\\u7EDF\\u8D44\\u6E90\\u7684\\u767E\\u5206\\u6BD4\\u4E3A\").concat(params.nonJavaResourcePercentage*100,\"%\\n   \\n\\u6700\\u7EC8SPECjbb2005\\u503C = \").concat(transactionsPerSecond,\" \\xD7 \").concat(params.peakValuePerTransaction,\" / (1 - \").concat(params.redundancyCapacity,\" - \").concat(params.nonJavaResourcePercentage,\") = \").concat(specjbbResult.toLocaleString(),\"\\n\\n4. \\u6240\\u9700\\u6838\\u6570\\u8BA1\\u7B97\\uFF1A\\n   - \\u5355\\u6838SPECjbb2005\\u57FA\\u51C6\\u503C\\uFF1A\").concat(BASELINE_SINGLE_CORE.specjbb,\"\\n   - \\u865A\\u62DF\\u5316\\u5F00\\u9500\\uFF1A10%\\n   - \\u6240\\u9700\\u6838\\u6570 = \\u2308\").concat(specjbbResult.toLocaleString(),\" \\xF7 \").concat(BASELINE_SINGLE_CORE.specjbb,\" \\xF7 (1 - 0.1)\\u2309 = \").concat(appServerCores,\"\\u6838\");};return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"SPECjbb2005\\u6027\\u80FD\\u6D4B\\u7B97\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2,position:'relative'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"\\u7528\\u6237\\u548C\\u5E76\\u53D1\\u53C2\\u6570\"}),/*#__PURE__*/_jsxs(Box,{sx:{position:'absolute',top:16,right:16,bgcolor:'primary.main',color:'white',px:2,py:1,borderRadius:1,display:'flex',flexDirection:'column',alignItems:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",sx:{mb:0.5},children:\"\\u6240\\u9700\\u6838\\u6570\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"div\",children:(()=>{const peakConcurrentTransactions=calculatePeakConcurrentTransactions();const transactionsPerSecond=calculateTransactionsPerSecond({peakConcurrentTransactions,requestsPerTransaction:inputs.requestsPerTransaction,transactionsPerRequest:inputs.transactionsPerRequest});const specjbbResult=calculateSPECjbb2005({transactionsPerSecond,peakValuePerTransaction:inputs.peakValuePerTransaction,redundancyCapacity:inputs.redundancyCapacity,nonJavaResourcePercentage:inputs.nonJavaResourcePercentage});const{appServerCores}=calculateServerResources({specjbbValue:specjbbResult,tpccValue:0,baselineSingleCore:BASELINE_SINGLE_CORE});return\"\".concat(appServerCores,\"\\u6838\");})()})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"\\u7CFB\\u7EDF\\u7528\\u6237\\u6570\",name:\"totalUsers\",type:\"number\",value:inputs.totalUsers,onChange:handleInputChange,helperText:\"\\u7CFB\\u7EDF\\u603B\\u7528\\u6237\\u6570\\uFF08\\u4EBA\\uFF09\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"\\u5CF0\\u503C\\u7CFB\\u7EDF\\u5E76\\u53D1\\u7387\",name:\"peakConcurrencyRate\",type:\"number\",value:inputs.peakConcurrencyRate,onChange:handleInputChange,helperText:\"0-1\\u4E4B\\u95F4\\u7684\\u5C0F\\u6570\\uFF0C\\u4F8B\\u59820.001\\u8868\\u793A0.1%\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"\\u6BCF\\u4E2A\\u5E76\\u53D1\\u4EA7\\u751F\\u7684\\u4EFB\\u52A1\\u6570\",name:\"tasksPerConcurrentUser\",type:\"number\",value:inputs.tasksPerConcurrentUser,onChange:handleInputChange,helperText:\"\\u6BCF\\u4E2A\\u5E76\\u53D1\\u7528\\u6237\\u4EA7\\u751F\\u7684\\u4EFB\\u52A1\\u6570\\uFF08\\u4E2A\\uFF09\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,disabled:true,label:\"\\u5CF0\\u503C\\u5E76\\u53D1\\u7528\\u6237\\u6570\",value:calculatePeakConcurrentUsers().toFixed(1),helperText:\"\\u81EA\\u52A8\\u8BA1\\u7B97\\uFF1A\\u7CFB\\u7EDF\\u7528\\u6237\\u6570 \\xD7 \\u5CF0\\u503C\\u7CFB\\u7EDF\\u5E76\\u53D1\\u7387\"})})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"\\u4E1A\\u52A1\\u4EA4\\u6613\\u91CF\\u53C2\\u6570\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"\\u6BCF\\u7B14\\u4E1A\\u52A1\\u53D1\\u51FA\\u5E94\\u7528\\u8BF7\\u6C42\\u6570\",name:\"requestsPerTransaction\",type:\"number\",value:inputs.requestsPerTransaction,onChange:handleInputChange})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"\\u5E73\\u5747\\u6BCF\\u4E2A\\u8BF7\\u6C42\\u5904\\u7406\\u7684\\u5E94\\u7528\\u7C7B\\u4E8B\\u52A1\\u6570\",name:\"transactionsPerRequest\",type:\"number\",value:inputs.transactionsPerRequest,onChange:handleInputChange})})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"SPECjbb2005\\u53C2\\u6570\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"\\u6BCF\\u7B14\\u4E1A\\u52A1\\u4EA4\\u6613SPECjbb2005\\u5CF0\\u503C\",name:\"peakValuePerTransaction\",type:\"number\",value:inputs.peakValuePerTransaction,onChange:handleInputChange,helperText:\"bops\\u503C\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"\\u7CFB\\u7EDF\\u5197\\u4F59\\u5904\\u7406\\u80FD\\u529B\",name:\"redundancyCapacity\",type:\"number\",value:inputs.redundancyCapacity,onChange:handleInputChange,helperText:\"0-1\\u4E4B\\u95F4\\u7684\\u5C0F\\u6570\\uFF0C\\u4F8B\\u59820.3\\u8868\\u793A30%\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"\\u975EJava\\u5E94\\u7528\\u5360\\u7528\\u7CFB\\u7EDF\\u8D44\\u6E90\\u767E\\u5206\\u6BD4\",name:\"nonJavaResourcePercentage\",type:\"number\",value:inputs.nonJavaResourcePercentage,onChange:handleInputChange,helperText:\"0-1\\u4E4B\\u95F4\\u7684\\u5C0F\\u6570\\uFF0C\\u4F8B\\u59820.2\\u8868\\u793A20%\"})})]})]})})]}),parseFloat(inputs.redundancyCapacity)+parseFloat(inputs.nonJavaResourcePercentage)>=100&&/*#__PURE__*/_jsx(Box,{mt:2,children:/*#__PURE__*/_jsx(Alert,{severity:\"error\",children:\"\\u7CFB\\u7EDF\\u5197\\u4F59\\u7387\\u4E0E\\u975EJava\\u8D44\\u6E90\\u5360\\u6BD4\\u4E4B\\u548C\\u4E0D\\u80FD\\u5927\\u4E8E\\u6216\\u7B49\\u4E8E100%\"})})]});}","map":{"version":3,"names":["React","useState","useEffect","Grid","TextField","Typography","Paper","Box","Alert","calculateSPECjbb2005","calculateTransactionsPerSecond","calculateServerResources","BASELINE_SINGLE_CORE","jsx","_jsx","jsxs","_jsxs","STORAGE_KEY","SPECjbbCalculator","_ref","onResultChange","inputs","setInputs","savedData","localStorage","getItem","JSON","parse","totalUsers","peakConcurrencyRate","tasksPerConcurrentUser","requestsPerTransaction","transactionsPerRequest","peakValuePerTransaction","redundancyCapacity","nonJavaResourcePercentage","handleInputChange","event","name","value","target","prev","_objectSpread","parseFloat","calculatePeakConcurrentUsers","calculatePeakConcurrentTransactions","peakConcurrentUsers","setItem","stringify","peakConcurrentTransactions","transactionsPerSecond","specjbbResult","appServerCores","specjbbValue","tpccValue","baselineSingleCore","finalResult","explanation","generateExplanation","params","concat","toFixed","toLocaleString","specjbb","children","variant","gutterBottom","container","spacing","item","xs","md","elevation","sx","p","position","top","right","bgcolor","color","px","py","borderRadius","display","flexDirection","alignItems","mb","component","fullWidth","label","type","onChange","helperText","disabled","mt","severity"],"sources":["D:/Workspace/project-calc-resource/src/components/calculators/SPECjbbCalculator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Paper,\r\n  Box,\r\n  Alert\r\n} from '@mui/material';\r\nimport {\r\n  calculateSPECjbb2005,\r\n  calculateTransactionsPerSecond,\r\n  calculateServerResources,\r\n  BASELINE_SINGLE_CORE\r\n} from '../../services/performanceCalculator';\r\n\r\nconst STORAGE_KEY = 'specjbbCalculatorData';\r\n\r\nexport default function SPECjbbCalculator({ onResultChange }) {\r\n  const [inputs, setInputs] = useState(() => {\r\n    // 从localStorage读取初始数据\r\n    const savedData = localStorage.getItem(STORAGE_KEY);\r\n    return savedData ? JSON.parse(savedData) : {\r\n      totalUsers: 158200, // 系统用户数\r\n      peakConcurrencyRate: 0.001, // 峰值系统并发率（0.1%）\r\n      tasksPerConcurrentUser: 2, // 每个并发产生的任务数\r\n      \r\n      // 业务交易量计算参数\r\n      requestsPerTransaction: 4, // 每笔业务发出应用请求数\r\n      transactionsPerRequest: 5, // 平均每个请求处理的应用类事务数\r\n      \r\n      // SPECjbb2005计算参数\r\n      peakValuePerTransaction: 1500, // 每笔业务交易需消耗的SPECjbb2005峰值\r\n      redundancyCapacity: 0.3, // 系统的冗余处理能力 (30%)\r\n      nonJavaResourcePercentage: 0 // 非Java应用所占用的系统资源百分比\r\n    };\r\n  });\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setInputs(prev => ({\r\n      ...prev,\r\n      [name]: parseFloat(value) || 0\r\n    }));\r\n  };\r\n\r\n  // 计算峰值并发用户数\r\n  const calculatePeakConcurrentUsers = () => {\r\n    return inputs.totalUsers * inputs.peakConcurrencyRate;\r\n  };\r\n\r\n  // 计算每秒并发要处理的业务量\r\n  const calculatePeakConcurrentTransactions = () => {\r\n    const peakConcurrentUsers = calculatePeakConcurrentUsers();\r\n    return peakConcurrentUsers * inputs.tasksPerConcurrentUser;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 保存到localStorage\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(inputs));\r\n\r\n    const peakConcurrentTransactions = calculatePeakConcurrentTransactions();\r\n    \r\n    // 计算每秒业务交易量\r\n    const transactionsPerSecond = calculateTransactionsPerSecond({\r\n      peakConcurrentTransactions,\r\n      requestsPerTransaction: inputs.requestsPerTransaction,\r\n      transactionsPerRequest: inputs.transactionsPerRequest\r\n    });\r\n\r\n    // 计算SPECjbb2005值\r\n    const specjbbResult = calculateSPECjbb2005({\r\n      transactionsPerSecond,\r\n      peakValuePerTransaction: inputs.peakValuePerTransaction,\r\n      redundancyCapacity: inputs.redundancyCapacity,\r\n      nonJavaResourcePercentage: inputs.nonJavaResourcePercentage\r\n    });\r\n\r\n    // 计算所需核数\r\n    const { appServerCores } = calculateServerResources({\r\n      specjbbValue: specjbbResult,\r\n      tpccValue: 0, // 这里我们只关心SPECjbb的结果\r\n      baselineSingleCore: BASELINE_SINGLE_CORE\r\n    });\r\n\r\n    const finalResult = {\r\n      peakConcurrentUsers: calculatePeakConcurrentUsers(),\r\n      peakConcurrentTransactions,\r\n      transactionsPerSecond,\r\n      specjbbValue: specjbbResult,\r\n      appServerCores,\r\n      explanation: generateExplanation(transactionsPerSecond, specjbbResult, appServerCores, inputs)\r\n    };\r\n\r\n    onResultChange(finalResult);\r\n  }, [inputs, onResultChange]);\r\n\r\n  const generateExplanation = (transactionsPerSecond, specjbbResult, appServerCores, params) => {\r\n    const peakConcurrentUsers = calculatePeakConcurrentUsers();\r\n    const peakConcurrentTransactions = calculatePeakConcurrentTransactions();\r\n    \r\n    return `应用服务器主要处理WEB服务器发送的业务请求处理、业务处理，主要工具箱使用，实现报表类、通用类等工具服务，每个微服务组件支持独立部署，为WEB应用提供共性服务支撑和基础信息配置。\r\n\r\n应用服务器采用SPECjbb2005标准对其性能指标进行测算，其计算公式为：SPECjbb2005 = A × B /（1 - C - D）\r\n其中：\r\nA：每秒最多需要同时处理的业务交易量。\r\nB：每笔业务交易需消耗的SPECjbb2005峰值。\r\nC：系统的冗余处理能力。\r\nD：非Java应用所占用的系统资源百分比。\r\n\r\n计算过程：\r\n1. 并发用户计算：\r\n   - 系统用户数：${params.totalUsers}人\r\n   - 峰值系统并发率：${(params.peakConcurrencyRate * 100).toFixed(3)}%\r\n   - 峰值并发用户数 = ${params.totalUsers} × ${(params.peakConcurrencyRate * 100).toFixed(3)}% = ${peakConcurrentUsers.toFixed(1)}人\r\n   - 每个并发产生的任务数：${params.tasksPerConcurrentUser}个\r\n   - 每秒并发要处理的业务量 = ${peakConcurrentUsers.toFixed(1)} × ${params.tasksPerConcurrentUser} = ${peakConcurrentTransactions.toFixed(1)}\r\n\r\n2. 业务交易量计算：\r\n   - 每笔业务发出应用请求数为${params.requestsPerTransaction}\r\n   - 平均每个请求处理的应用类事务数为${params.transactionsPerRequest}\r\n   - 每秒钟最多需要同时处理的业务交易量 = ${peakConcurrentTransactions.toFixed(1)} × ${params.requestsPerTransaction} × ${params.transactionsPerRequest} = ${transactionsPerSecond}\r\n\r\n3. SPECjbb2005值计算：\r\n   - 每笔业务交易需消耗的SPECjbb2005峰值为${params.peakValuePerTransaction}\r\n   - 系统预留${params.redundancyCapacity * 100}%冗余\r\n   - 非Java应用所占系统资源的百分比为${params.nonJavaResourcePercentage * 100}%\r\n   \r\n最终SPECjbb2005值 = ${transactionsPerSecond} × ${params.peakValuePerTransaction} / (1 - ${params.redundancyCapacity} - ${params.nonJavaResourcePercentage}) = ${specjbbResult.toLocaleString()}\r\n\r\n4. 所需核数计算：\r\n   - 单核SPECjbb2005基准值：${BASELINE_SINGLE_CORE.specjbb}\r\n   - 虚拟化开销：10%\r\n   - 所需核数 = ⌈${specjbbResult.toLocaleString()} ÷ ${BASELINE_SINGLE_CORE.specjbb} ÷ (1 - 0.1)⌉ = ${appServerCores}核`;\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        SPECjbb2005性能测算\r\n      </Typography>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper elevation={2} sx={{ p: 2, position: 'relative' }}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              用户和并发参数\r\n            </Typography>\r\n            <Box \r\n              sx={{ \r\n                position: 'absolute', \r\n                top: 16, \r\n                right: 16, \r\n                bgcolor: 'primary.main',\r\n                color: 'white',\r\n                px: 2,\r\n                py: 1,\r\n                borderRadius: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center'\r\n              }}\r\n            >\r\n              <Typography variant=\"caption\" sx={{ mb: 0.5 }}>\r\n                所需核数\r\n              </Typography>\r\n              <Typography variant=\"h6\" component=\"div\">\r\n                {(() => {\r\n                  const peakConcurrentTransactions = calculatePeakConcurrentTransactions();\r\n                  const transactionsPerSecond = calculateTransactionsPerSecond({\r\n                    peakConcurrentTransactions,\r\n                    requestsPerTransaction: inputs.requestsPerTransaction,\r\n                    transactionsPerRequest: inputs.transactionsPerRequest\r\n                  });\r\n                  const specjbbResult = calculateSPECjbb2005({\r\n                    transactionsPerSecond,\r\n                    peakValuePerTransaction: inputs.peakValuePerTransaction,\r\n                    redundancyCapacity: inputs.redundancyCapacity,\r\n                    nonJavaResourcePercentage: inputs.nonJavaResourcePercentage\r\n                  });\r\n                  const { appServerCores } = calculateServerResources({\r\n                    specjbbValue: specjbbResult,\r\n                    tpccValue: 0,\r\n                    baselineSingleCore: BASELINE_SINGLE_CORE\r\n                  });\r\n                  return `${appServerCores}核`;\r\n                })()}\r\n              </Typography>\r\n            </Box>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"系统用户数\"\r\n                  name=\"totalUsers\"\r\n                  type=\"number\"\r\n                  value={inputs.totalUsers}\r\n                  onChange={handleInputChange}\r\n                  helperText=\"系统总用户数（人）\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"峰值系统并发率\"\r\n                  name=\"peakConcurrencyRate\"\r\n                  type=\"number\"\r\n                  value={inputs.peakConcurrencyRate}\r\n                  onChange={handleInputChange}\r\n                  helperText=\"0-1之间的小数，例如0.001表示0.1%\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"每个并发产生的任务数\"\r\n                  name=\"tasksPerConcurrentUser\"\r\n                  type=\"number\"\r\n                  value={inputs.tasksPerConcurrentUser}\r\n                  onChange={handleInputChange}\r\n                  helperText=\"每个并发用户产生的任务数（个）\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  disabled\r\n                  label=\"峰值并发用户数\"\r\n                  value={calculatePeakConcurrentUsers().toFixed(1)}\r\n                  helperText=\"自动计算：系统用户数 × 峰值系统并发率\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <Paper elevation={2} sx={{ p: 2 }}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              业务交易量参数\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"每笔业务发出应用请求数\"\r\n                  name=\"requestsPerTransaction\"\r\n                  type=\"number\"\r\n                  value={inputs.requestsPerTransaction}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"平均每个请求处理的应用类事务数\"\r\n                  name=\"transactionsPerRequest\"\r\n                  type=\"number\"\r\n                  value={inputs.transactionsPerRequest}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper elevation={2} sx={{ p: 2 }}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              SPECjbb2005参数\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"每笔业务交易SPECjbb2005峰值\"\r\n                  name=\"peakValuePerTransaction\"\r\n                  type=\"number\"\r\n                  value={inputs.peakValuePerTransaction}\r\n                  onChange={handleInputChange}\r\n                  helperText=\"bops值\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"系统冗余处理能力\"\r\n                  name=\"redundancyCapacity\"\r\n                  type=\"number\"\r\n                  value={inputs.redundancyCapacity}\r\n                  onChange={handleInputChange}\r\n                  helperText=\"0-1之间的小数，例如0.3表示30%\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"非Java应用占用系统资源百分比\"\r\n                  name=\"nonJavaResourcePercentage\"\r\n                  type=\"number\"\r\n                  value={inputs.nonJavaResourcePercentage}\r\n                  onChange={handleInputChange}\r\n                  helperText=\"0-1之间的小数，例如0.2表示20%\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {parseFloat(inputs.redundancyCapacity) + parseFloat(inputs.nonJavaResourcePercentage) >= 100 && (\r\n        <Box mt={2}>\r\n          <Alert severity=\"error\">\r\n            系统冗余率与非Java资源占比之和不能大于或等于100%\r\n          </Alert>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n} "],"mappings":"uHAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OACEC,IAAI,CACJC,SAAS,CACTC,UAAU,CACVC,KAAK,CACLC,GAAG,CACHC,KAAK,KACA,eAAe,CACtB,OACEC,oBAAoB,CACpBC,8BAA8B,CAC9BC,wBAAwB,CACxBC,oBAAoB,KACf,sCAAsC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9C,KAAM,CAAAC,WAAW,CAAG,uBAAuB,CAE3C,cAAe,SAAS,CAAAC,iBAAiBA,CAAAC,IAAA,CAAqB,IAApB,CAAEC,cAAe,CAAC,CAAAD,IAAA,CAC1D,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGrB,QAAQ,CAAC,IAAM,CACzC;AACA,KAAM,CAAAsB,SAAS,CAAGC,YAAY,CAACC,OAAO,CAACR,WAAW,CAAC,CACnD,MAAO,CAAAM,SAAS,CAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAG,CACzCK,UAAU,CAAE,MAAM,CAAE;AACpBC,mBAAmB,CAAE,KAAK,CAAE;AAC5BC,sBAAsB,CAAE,CAAC,CAAE;AAE3B;AACAC,sBAAsB,CAAE,CAAC,CAAE;AAC3BC,sBAAsB,CAAE,CAAC,CAAE;AAE3B;AACAC,uBAAuB,CAAE,IAAI,CAAE;AAC/BC,kBAAkB,CAAE,GAAG,CAAE;AACzBC,yBAAyB,CAAE,CAAE;AAC/B,CAAC,CACH,CAAC,CAAC,CAEF,KAAM,CAAAC,iBAAiB,CAAIC,KAAK,EAAK,CACnC,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAGF,KAAK,CAACG,MAAM,CACpClB,SAAS,CAACmB,IAAI,EAAAC,aAAA,CAAAA,aAAA,IACTD,IAAI,MACP,CAACH,IAAI,EAAGK,UAAU,CAACJ,KAAK,CAAC,EAAI,CAAC,EAC9B,CAAC,CACL,CAAC,CAED;AACA,KAAM,CAAAK,4BAA4B,CAAGA,CAAA,GAAM,CACzC,MAAO,CAAAvB,MAAM,CAACO,UAAU,CAAGP,MAAM,CAACQ,mBAAmB,CACvD,CAAC,CAED;AACA,KAAM,CAAAgB,mCAAmC,CAAGA,CAAA,GAAM,CAChD,KAAM,CAAAC,mBAAmB,CAAGF,4BAA4B,CAAC,CAAC,CAC1D,MAAO,CAAAE,mBAAmB,CAAGzB,MAAM,CAACS,sBAAsB,CAC5D,CAAC,CAED5B,SAAS,CAAC,IAAM,CACd;AACAsB,YAAY,CAACuB,OAAO,CAAC9B,WAAW,CAAES,IAAI,CAACsB,SAAS,CAAC3B,MAAM,CAAC,CAAC,CAEzD,KAAM,CAAA4B,0BAA0B,CAAGJ,mCAAmC,CAAC,CAAC,CAExE;AACA,KAAM,CAAAK,qBAAqB,CAAGxC,8BAA8B,CAAC,CAC3DuC,0BAA0B,CAC1BlB,sBAAsB,CAAEV,MAAM,CAACU,sBAAsB,CACrDC,sBAAsB,CAAEX,MAAM,CAACW,sBACjC,CAAC,CAAC,CAEF;AACA,KAAM,CAAAmB,aAAa,CAAG1C,oBAAoB,CAAC,CACzCyC,qBAAqB,CACrBjB,uBAAuB,CAAEZ,MAAM,CAACY,uBAAuB,CACvDC,kBAAkB,CAAEb,MAAM,CAACa,kBAAkB,CAC7CC,yBAAyB,CAAEd,MAAM,CAACc,yBACpC,CAAC,CAAC,CAEF;AACA,KAAM,CAAEiB,cAAe,CAAC,CAAGzC,wBAAwB,CAAC,CAClD0C,YAAY,CAAEF,aAAa,CAC3BG,SAAS,CAAE,CAAC,CAAE;AACdC,kBAAkB,CAAE3C,oBACtB,CAAC,CAAC,CAEF,KAAM,CAAA4C,WAAW,CAAG,CAClBV,mBAAmB,CAAEF,4BAA4B,CAAC,CAAC,CACnDK,0BAA0B,CAC1BC,qBAAqB,CACrBG,YAAY,CAAEF,aAAa,CAC3BC,cAAc,CACdK,WAAW,CAAEC,mBAAmB,CAACR,qBAAqB,CAAEC,aAAa,CAAEC,cAAc,CAAE/B,MAAM,CAC/F,CAAC,CAEDD,cAAc,CAACoC,WAAW,CAAC,CAC7B,CAAC,CAAE,CAACnC,MAAM,CAAED,cAAc,CAAC,CAAC,CAE5B,KAAM,CAAAsC,mBAAmB,CAAGA,CAACR,qBAAqB,CAAEC,aAAa,CAAEC,cAAc,CAAEO,MAAM,GAAK,CAC5F,KAAM,CAAAb,mBAAmB,CAAGF,4BAA4B,CAAC,CAAC,CAC1D,KAAM,CAAAK,0BAA0B,CAAGJ,mCAAmC,CAAC,CAAC,CAExE,4uCAAAe,MAAA,CAWSD,MAAM,CAAC/B,UAAU,kEAAAgC,MAAA,CACf,CAACD,MAAM,CAAC9B,mBAAmB,CAAG,GAAG,EAAEgC,OAAO,CAAC,CAAC,CAAC,0DAAAD,MAAA,CAC3CD,MAAM,CAAC/B,UAAU,WAAAgC,MAAA,CAAM,CAACD,MAAM,CAAC9B,mBAAmB,CAAG,GAAG,EAAEgC,OAAO,CAAC,CAAC,CAAC,SAAAD,MAAA,CAAOd,mBAAmB,CAACe,OAAO,CAAC,CAAC,CAAC,oFAAAD,MAAA,CACxGD,MAAM,CAAC7B,sBAAsB,uFAAA8B,MAAA,CAC1Bd,mBAAmB,CAACe,OAAO,CAAC,CAAC,CAAC,WAAAD,MAAA,CAAMD,MAAM,CAAC7B,sBAAsB,QAAA8B,MAAA,CAAMX,0BAA0B,CAACY,OAAO,CAAC,CAAC,CAAC,2IAAAD,MAAA,CAG9GD,MAAM,CAAC5B,sBAAsB,4GAAA6B,MAAA,CACzBD,MAAM,CAAC3B,sBAAsB,qHAAA4B,MAAA,CACzBX,0BAA0B,CAACY,OAAO,CAAC,CAAC,CAAC,WAAAD,MAAA,CAAMD,MAAM,CAAC5B,sBAAsB,WAAA6B,MAAA,CAAMD,MAAM,CAAC3B,sBAAsB,QAAA4B,MAAA,CAAMV,qBAAqB,+IAAAU,MAAA,CAGlID,MAAM,CAAC1B,uBAAuB,oCAAA2B,MAAA,CAClDD,MAAM,CAACzB,kBAAkB,CAAG,GAAG,iHAAA0B,MAAA,CACjBD,MAAM,CAACxB,yBAAyB,CAAG,GAAG,6CAAAyB,MAAA,CAE5CV,qBAAqB,WAAAU,MAAA,CAAMD,MAAM,CAAC1B,uBAAuB,aAAA2B,MAAA,CAAWD,MAAM,CAACzB,kBAAkB,QAAA0B,MAAA,CAAMD,MAAM,CAACxB,yBAAyB,SAAAyB,MAAA,CAAOT,aAAa,CAACW,cAAc,CAAC,CAAC,4GAAAF,MAAA,CAGnKhD,oBAAoB,CAACmD,OAAO,2FAAAH,MAAA,CAErCT,aAAa,CAACW,cAAc,CAAC,CAAC,WAAAF,MAAA,CAAMhD,oBAAoB,CAACmD,OAAO,6BAAAH,MAAA,CAAmBR,cAAc,WAC9G,CAAC,CAED,mBACEpC,KAAA,CAACT,GAAG,EAAAyD,QAAA,eACFlD,IAAA,CAACT,UAAU,EAAC4D,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAF,QAAA,CAAC,qCAEtC,CAAY,CAAC,cAEbhD,KAAA,CAACb,IAAI,EAACgE,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAJ,QAAA,eACzBlD,IAAA,CAACX,IAAI,EAACkE,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAP,QAAA,cACvBhD,KAAA,CAACV,KAAK,EAACkE,SAAS,CAAE,CAAE,CAACC,EAAE,CAAE,CAAEC,CAAC,CAAE,CAAC,CAAEC,QAAQ,CAAE,UAAW,CAAE,CAAAX,QAAA,eACtDlD,IAAA,CAACT,UAAU,EAAC4D,OAAO,CAAC,WAAW,CAACC,YAAY,MAAAF,QAAA,CAAC,4CAE7C,CAAY,CAAC,cACbhD,KAAA,CAACT,GAAG,EACFkE,EAAE,CAAE,CACFE,QAAQ,CAAE,UAAU,CACpBC,GAAG,CAAE,EAAE,CACPC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,cAAc,CACvBC,KAAK,CAAE,OAAO,CACdC,EAAE,CAAE,CAAC,CACLC,EAAE,CAAE,CAAC,CACLC,YAAY,CAAE,CAAC,CACfC,OAAO,CAAE,MAAM,CACfC,aAAa,CAAE,QAAQ,CACvBC,UAAU,CAAE,QACd,CAAE,CAAArB,QAAA,eAEFlD,IAAA,CAACT,UAAU,EAAC4D,OAAO,CAAC,SAAS,CAACQ,EAAE,CAAE,CAAEa,EAAE,CAAE,GAAI,CAAE,CAAAtB,QAAA,CAAC,0BAE/C,CAAY,CAAC,cACblD,IAAA,CAACT,UAAU,EAAC4D,OAAO,CAAC,IAAI,CAACsB,SAAS,CAAC,KAAK,CAAAvB,QAAA,CACrC,CAAC,IAAM,CACN,KAAM,CAAAf,0BAA0B,CAAGJ,mCAAmC,CAAC,CAAC,CACxE,KAAM,CAAAK,qBAAqB,CAAGxC,8BAA8B,CAAC,CAC3DuC,0BAA0B,CAC1BlB,sBAAsB,CAAEV,MAAM,CAACU,sBAAsB,CACrDC,sBAAsB,CAAEX,MAAM,CAACW,sBACjC,CAAC,CAAC,CACF,KAAM,CAAAmB,aAAa,CAAG1C,oBAAoB,CAAC,CACzCyC,qBAAqB,CACrBjB,uBAAuB,CAAEZ,MAAM,CAACY,uBAAuB,CACvDC,kBAAkB,CAAEb,MAAM,CAACa,kBAAkB,CAC7CC,yBAAyB,CAAEd,MAAM,CAACc,yBACpC,CAAC,CAAC,CACF,KAAM,CAAEiB,cAAe,CAAC,CAAGzC,wBAAwB,CAAC,CAClD0C,YAAY,CAAEF,aAAa,CAC3BG,SAAS,CAAE,CAAC,CACZC,kBAAkB,CAAE3C,oBACtB,CAAC,CAAC,CACF,SAAAgD,MAAA,CAAUR,cAAc,WAC1B,CAAC,EAAE,CAAC,CACM,CAAC,EACV,CAAC,cACNpC,KAAA,CAACb,IAAI,EAACgE,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAJ,QAAA,eACzBlD,IAAA,CAACX,IAAI,EAACkE,IAAI,MAACC,EAAE,CAAE,EAAG,CAAAN,QAAA,cAChBlD,IAAA,CAACV,SAAS,EACRoF,SAAS,MACTC,KAAK,CAAC,gCAAO,CACbnD,IAAI,CAAC,YAAY,CACjBoD,IAAI,CAAC,QAAQ,CACbnD,KAAK,CAAElB,MAAM,CAACO,UAAW,CACzB+D,QAAQ,CAAEvD,iBAAkB,CAC5BwD,UAAU,CAAC,wDAAW,CACvB,CAAC,CACE,CAAC,cACP9E,IAAA,CAACX,IAAI,EAACkE,IAAI,MAACC,EAAE,CAAE,EAAG,CAAAN,QAAA,cAChBlD,IAAA,CAACV,SAAS,EACRoF,SAAS,MACTC,KAAK,CAAC,4CAAS,CACfnD,IAAI,CAAC,qBAAqB,CAC1BoD,IAAI,CAAC,QAAQ,CACbnD,KAAK,CAAElB,MAAM,CAACQ,mBAAoB,CAClC8D,QAAQ,CAAEvD,iBAAkB,CAC5BwD,UAAU,CAAC,0EAAwB,CACpC,CAAC,CACE,CAAC,cACP9E,IAAA,CAACX,IAAI,EAACkE,IAAI,MAACC,EAAE,CAAE,EAAG,CAAAN,QAAA,cAChBlD,IAAA,CAACV,SAAS,EACRoF,SAAS,MACTC,KAAK,CAAC,8DAAY,CAClBnD,IAAI,CAAC,wBAAwB,CAC7BoD,IAAI,CAAC,QAAQ,CACbnD,KAAK,CAAElB,MAAM,CAACS,sBAAuB,CACrC6D,QAAQ,CAAEvD,iBAAkB,CAC5BwD,UAAU,CAAC,4FAAiB,CAC7B,CAAC,CACE,CAAC,cACP9E,IAAA,CAACX,IAAI,EAACkE,IAAI,MAACC,EAAE,CAAE,EAAG,CAAAN,QAAA,cAChBlD,IAAA,CAACV,SAAS,EACRoF,SAAS,MACTK,QAAQ,MACRJ,KAAK,CAAC,4CAAS,CACflD,KAAK,CAAEK,4BAA4B,CAAC,CAAC,CAACiB,OAAO,CAAC,CAAC,CAAE,CACjD+B,UAAU,CAAC,8GAAsB,CAClC,CAAC,CACE,CAAC,EACH,CAAC,EACF,CAAC,CACJ,CAAC,cAEP9E,IAAA,CAACX,IAAI,EAACkE,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAP,QAAA,cACvBhD,KAAA,CAACV,KAAK,EAACkE,SAAS,CAAE,CAAE,CAACC,EAAE,CAAE,CAAEC,CAAC,CAAE,CAAE,CAAE,CAAAV,QAAA,eAChClD,IAAA,CAACT,UAAU,EAAC4D,OAAO,CAAC,WAAW,CAACC,YAAY,MAAAF,QAAA,CAAC,4CAE7C,CAAY,CAAC,cACbhD,KAAA,CAACb,IAAI,EAACgE,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAJ,QAAA,eACzBlD,IAAA,CAACX,IAAI,EAACkE,IAAI,MAACC,EAAE,CAAE,EAAG,CAAAN,QAAA,cAChBlD,IAAA,CAACV,SAAS,EACRoF,SAAS,MACTC,KAAK,CAAC,oEAAa,CACnBnD,IAAI,CAAC,wBAAwB,CAC7BoD,IAAI,CAAC,QAAQ,CACbnD,KAAK,CAAElB,MAAM,CAACU,sBAAuB,CACrC4D,QAAQ,CAAEvD,iBAAkB,CAC7B,CAAC,CACE,CAAC,cACPtB,IAAA,CAACX,IAAI,EAACkE,IAAI,MAACC,EAAE,CAAE,EAAG,CAAAN,QAAA,cAChBlD,IAAA,CAACV,SAAS,EACRoF,SAAS,MACTC,KAAK,CAAC,4FAAiB,CACvBnD,IAAI,CAAC,wBAAwB,CAC7BoD,IAAI,CAAC,QAAQ,CACbnD,KAAK,CAAElB,MAAM,CAACW,sBAAuB,CACrC2D,QAAQ,CAAEvD,iBAAkB,CAC7B,CAAC,CACE,CAAC,EACH,CAAC,EACF,CAAC,CACJ,CAAC,cAEPtB,IAAA,CAACX,IAAI,EAACkE,IAAI,MAACC,EAAE,CAAE,EAAG,CAAAN,QAAA,cAChBhD,KAAA,CAACV,KAAK,EAACkE,SAAS,CAAE,CAAE,CAACC,EAAE,CAAE,CAAEC,CAAC,CAAE,CAAE,CAAE,CAAAV,QAAA,eAChClD,IAAA,CAACT,UAAU,EAAC4D,OAAO,CAAC,WAAW,CAACC,YAAY,MAAAF,QAAA,CAAC,yBAE7C,CAAY,CAAC,cACbhD,KAAA,CAACb,IAAI,EAACgE,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAJ,QAAA,eACzBlD,IAAA,CAACX,IAAI,EAACkE,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAP,QAAA,cACvBlD,IAAA,CAACV,SAAS,EACRoF,SAAS,MACTC,KAAK,CAAC,6DAAqB,CAC3BnD,IAAI,CAAC,yBAAyB,CAC9BoD,IAAI,CAAC,QAAQ,CACbnD,KAAK,CAAElB,MAAM,CAACY,uBAAwB,CACtC0D,QAAQ,CAAEvD,iBAAkB,CAC5BwD,UAAU,CAAC,YAAO,CACnB,CAAC,CACE,CAAC,cACP9E,IAAA,CAACX,IAAI,EAACkE,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAP,QAAA,cACvBlD,IAAA,CAACV,SAAS,EACRoF,SAAS,MACTC,KAAK,CAAC,kDAAU,CAChBnD,IAAI,CAAC,oBAAoB,CACzBoD,IAAI,CAAC,QAAQ,CACbnD,KAAK,CAAElB,MAAM,CAACa,kBAAmB,CACjCyD,QAAQ,CAAEvD,iBAAkB,CAC5BwD,UAAU,CAAC,uEAAqB,CACjC,CAAC,CACE,CAAC,cACP9E,IAAA,CAACX,IAAI,EAACkE,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAP,QAAA,cACvBlD,IAAA,CAACV,SAAS,EACRoF,SAAS,MACTC,KAAK,CAAC,8EAAkB,CACxBnD,IAAI,CAAC,2BAA2B,CAChCoD,IAAI,CAAC,QAAQ,CACbnD,KAAK,CAAElB,MAAM,CAACc,yBAA0B,CACxCwD,QAAQ,CAAEvD,iBAAkB,CAC5BwD,UAAU,CAAC,uEAAqB,CACjC,CAAC,CACE,CAAC,EACH,CAAC,EACF,CAAC,CACJ,CAAC,EACH,CAAC,CAENjD,UAAU,CAACtB,MAAM,CAACa,kBAAkB,CAAC,CAAGS,UAAU,CAACtB,MAAM,CAACc,yBAAyB,CAAC,EAAI,GAAG,eAC1FrB,IAAA,CAACP,GAAG,EAACuF,EAAE,CAAE,CAAE,CAAA9B,QAAA,cACTlD,IAAA,CAACN,KAAK,EAACuF,QAAQ,CAAC,OAAO,CAAA/B,QAAA,CAAC,kIAExB,CAAO,CAAC,CACL,CACN,EACE,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}